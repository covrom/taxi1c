// Code generated by go-bindata.
// sources:
// skeleton.css
// DO NOT EDIT!

package main

import (
	"github.com/elazarl/go-bindata-assetfs"
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _skeletonCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7c\x69\x93\xaa\x58\xd2\xf0\xf7\xf7\x57\x38\xd5\x71\xe3\xce\x4c\xa1\xb2\x08\x6e\x31\x13\x2f\x08\x5a\x5a\xa2\x25\xee\x4e\xdc\x0f\x2c\x47\x41\xd9\x9a\xc5\x75\xfc\xef\x4f\xb0\x88\x80\x68\xd5\x9d\x9e\x78\xba\x9f\x0e\xdb\xb8\x5d\x92\xdb\xc9\x93\x27\x33\xcf\x49\xc0\x2c\xfe\xfd\x2f\x39\xdd\xb0\x34\x5e\x55\x8e\xa0\x20\xda\x76\x6e\x5b\x29\xc0\x05\x38\xf7\xef\x1c\xdb\x1e\xe5\xba\x8a\x08\x74\x1b\xe4\xfe\x9d\x5b\x29\x8e\xec\x0a\x05\xd1\xd0\x8a\x3a\x10\x0d\x95\xb7\x8b\x49\xbe\xbf\x17\x65\x47\x53\x4f\xaa\xa2\x83\xbc\x0c\x94\x95\xec\xd4\x90\x02\x82\xd7\xf3\x3b\x20\x6c\x14\x27\xef\x80\xbd\x93\xb7\x95\x23\xc8\xf3\xd2\xda\xb5\x9d\x1a\x02\xc3\xdf\xce\x82\x21\x1d\x4e\x1a\x6f\xad\x14\xbd\x06\x9f\x65\xe4\xb4\x34\xf4\x80\xac\x86\x02\xad\x7e\xc1\x14\x88\x32\xd0\x72\xf0\x59\xb6\x4e\x82\xb1\xf7\xf0\x8a\xbe\xaa\x89\x86\xee\x00\xdd\xc9\x0b\xc6\xbe\x1e\x0e\x09\xd7\x8d\x2d\xb0\x96\xaa\xb1\xab\x6d\x15\x5b\x11\x54\x70\x36\x2d\x10\x48\x5d\xf2\x9a\xa2\x1e\x6a\x9a\xa1\x1b\xb6\xc9\x8b\x00\xca\x45\x5f\xeb\xd7\x61\x11\xa0\x9d\xf9\x93\xc0\x8b\x9b\x95\x65\xb8\xba\x94\x17\x0d\xd5\xb0\x6a\x8e\xc5\xeb\xb6\xc9\x5b\x40\x77\xce\xbc\x20\x58\xff\x72\x14\x47\x05\x3f\x4e\x82\x61\x49\xc0\xca\x0b\x86\xe3\x18\x5a\x4d\x37\x74\x50\xf7\x67\x2a\x01\xd1\xb0\x78\x47\x31\xf4\x9a\xab\x4b\xc0\xf2\xec\x72\x1f\x93\x93\x0c\xc7\x01\xd2\x59\x80\x6c\xc7\x32\xf4\x55\xa0\xf0\x2e\x98\x93\x60\xa8\x12\xb0\xce\xa2\x21\x01\x68\x23\x48\x90\xcd\x6b\xe6\xcf\xce\xc8\xd6\x78\x55\x8d\x19\xb7\x02\x7f\x3b\xdb\xae\x00\xd9\xae\x19\x83\x96\xf1\x6f\xf5\xf8\x02\xc2\x75\xd3\xb0\x15\x5f\x55\x0b\xa8\xbc\xa3\x6c\x41\x7d\x0b\x2c\x47\x11\x79\x35\xcf\xab\xca\x4a\xaf\x09\xbc\x0d\x3c\x16\x4f\xda\x29\xb4\x42\x1e\x2e\xa0\xb8\x37\xa8\x6b\x9e\x1c\xc3\xf4\xae\xbd\x4b\x45\x5b\x5d\xcc\x65\x3b\x07\x15\xf8\xd6\x3a\x0b\xae\xe3\x18\x3a\xa4\xe8\xa6\xeb\x40\x86\xe9\x78\x56\x37\x21\x1b\xa8\x40\x74\x20\xcf\x60\xbc\x05\xf8\xc4\x74\x15\x5d\x06\x96\xe2\xc4\x67\x08\xc3\x49\xc5\x7d\xcf\x8b\xdc\x2a\x3e\xc4\xe9\xc6\x3f\x42\x6c\x30\xe2\xc9\x5f\x22\x7f\xb1\x97\x86\xa5\x25\x54\xfc\x97\x73\x30\xc1\x3f\x5e\x82\xab\x97\x1f\x97\x6b\x0b\xd8\xc0\xb9\x5e\xda\xae\xa0\x29\xce\xcb\x8f\xd3\xc5\xf1\x79\xd3\x04\xbc\xc5\xeb\x22\xa8\x05\xac\xa1\xbc\x5a\x2d\xaf\x19\xc7\xfc\xd2\x10\x5d\x3b\xaf\xe8\x3a\xb0\xd2\x23\xdc\xa7\x08\xc7\xbc\x4f\x70\xd1\xe2\x96\xe2\x76\x09\xea\x26\x2f\x49\x5e\x3c\x5d\x2c\x15\xe3\xb1\x14\x7d\x75\xa3\x56\x36\xfa\xa2\x53\x36\x36\x52\x28\x89\x3e\x19\xae\xe3\x2d\x5c\x0d\x31\xf7\x61\x10\xe4\x28\x7f\x9c\x11\xd8\x3b\xe7\xa5\x02\x54\xc9\x06\xce\x29\x52\xb1\x80\xe1\x5e\x26\x28\x94\x83\x3f\x84\xef\x68\x2a\x58\x01\x5d\x8a\xa7\x86\x28\x2c\xf7\xf5\x20\x7e\x2f\x4e\x23\x29\xb6\xa9\xf2\x87\x9a\xc3\x0b\x2a\xa8\x6b\xfc\x3e\xbf\x53\x24\x47\x0e\x5c\x28\x1a\xa5\xbe\x93\x15\x07\xe4\xfd\x48\xaa\x05\x79\xee\x6c\x5a\xc6\xca\x02\xb6\x7d\xba\x17\x01\x91\xb3\x46\x2e\xc6\xbb\x8e\x71\x0e\x0d\x20\xca\x40\xdc\x08\xc6\x3e\xe6\x38\xbc\xa4\x18\x2f\x3f\xee\xa8\x7d\x5d\x94\x90\x5c\x77\x35\x01\x58\xfe\x92\x86\x9e\xe5\xaf\x67\xde\x36\x15\x3d\x9f\x74\xd1\x5b\x52\xc3\x75\x92\xa4\xa7\x30\x52\xe2\x2a\xda\x80\xb7\x44\x39\xdb\x75\xbd\xc9\xf9\xab\x51\x0f\x57\x2c\x6f\x2c\x97\x36\x70\x6a\x79\xd4\xdc\xa7\x05\x5c\xc7\x0d\x20\xb1\x9c\x97\x25\xdb\x0f\xb2\x2b\xcf\x52\x51\x41\xde\x35\x55\x83\x97\x2e\xca\xde\x8d\x25\x3f\x09\x5c\x16\xf7\x2c\x01\x87\x57\x54\xfb\x74\x59\x64\x41\x35\xc4\xcd\xd9\x76\x35\x8d\xb7\x0e\x11\x54\x55\x6c\x27\xaf\x38\x40\x3b\x3b\x40\x33\x55\xde\x01\x11\xca\xd7\xe4\x5f\xb2\x22\x49\x40\xff\x91\x84\xfa\xbb\xdb\x35\xe5\x10\x68\x01\x0f\xb7\xaf\x58\x1e\x2a\x60\x40\x4b\x25\x22\xa2\x1e\xcf\xe5\x25\x18\xae\xc7\x73\xd9\x4b\xcf\x70\x8c\xdc\x90\xd7\xed\x17\xe8\x85\x33\x04\xc3\x31\x5e\xa0\x97\x37\xa0\x6e\x81\xe7\x63\x3d\xe0\x82\xf8\x75\x2e\x00\x44\xd7\xd0\x0b\x3b\xf4\xb9\x73\x43\x60\x29\xcb\x17\x88\xb4\x14\x5e\x85\x6c\x5e\xb7\xf3\xb6\x07\x09\xbd\xff\x97\x92\xe0\x7d\xce\xfc\x29\xbc\x46\x44\x1c\xe7\xc1\x99\xaf\xc9\x9e\xb3\x46\xd0\x4a\x89\xaf\x56\xbc\x5d\x36\xc8\x9d\x79\x2f\x7b\x63\x56\xb4\x11\x5f\xb6\x39\xac\x80\x7b\xc0\xd0\x5b\x83\x00\x82\x2f\x97\x1e\x8f\x17\xcd\xb6\xa1\x2a\x52\xee\x17\x80\x78\x9f\x73\xc1\xcd\x2f\x5d\x55\x0d\x88\x4f\xb1\x98\xcb\xf4\x7e\x8f\xdc\x8b\xcd\x18\x4b\x2a\x54\xef\xb2\x99\x1e\x8b\xe5\x19\xfb\xb4\x54\x0d\xde\xa9\xf9\xdf\x23\x8c\x0a\x96\x17\x84\xf7\xf5\x2c\x23\x90\x8c\x42\x32\x06\xc9\x25\x48\xc6\x21\x99\x88\x4f\x1d\x29\x10\xb7\x93\x0f\x81\xf1\x55\xc5\xe0\xd4\xd9\xa5\x54\x80\xad\x1b\x4f\x40\xeb\x2a\x70\x82\x30\xe4\x45\x4f\xf1\x7c\x01\xb1\x80\x76\x96\xd1\x18\x27\x16\x48\x4f\x71\xe2\xf7\x58\xb1\x04\x6b\xc6\xa0\xd8\x3d\xce\x52\xfc\xa8\x55\x28\x65\x70\x66\x0c\x0a\x57\x7c\x5e\x3c\xe1\xf3\x95\x5b\xde\x2c\x56\xdc\x67\x25\x12\xac\xf8\x2d\x2b\x91\x66\x85\xcf\x05\xd7\x34\x81\xe5\x27\x63\x29\xbd\x41\xfb\x28\x91\xb7\x13\x07\x9e\x70\x3a\x49\x39\xfe\xbc\x13\xcb\x46\xc0\xf0\xf9\xff\x6b\x40\x52\xf8\xdc\x5f\x35\x45\x0f\xdd\x2b\x87\xe3\xb0\xb9\xff\xdb\x29\xb1\xa0\xb8\x6f\xdb\xe4\x52\x95\x0a\x68\xc6\x1a\x10\x37\xd6\xc5\x42\x5e\xfc\xc6\xe2\x59\xe6\x38\x9f\xcd\xb8\x0b\xc2\xe7\x82\x77\xcc\xe5\x15\x6f\xeb\xbe\x3d\x8d\xc5\x22\xe2\x1a\x20\x55\x02\x36\xf7\xd1\xf1\x27\xe7\xa5\xf8\xeb\x76\x92\x43\x3d\xe4\x9d\xf0\x11\x0d\xd5\xd5\x74\x28\xfc\x6b\xc7\xe3\xf4\x1a\x33\x77\x98\x33\x2c\x59\x82\x7d\x4b\xc6\x66\x10\x20\x2a\x78\x6c\xaf\x3d\x3f\x58\x83\x5b\x4e\xf8\xdb\xad\x96\xa1\xb9\x3c\xdd\x6a\x48\x84\xaf\x2d\x15\xcb\x76\xf2\xa2\xac\xa8\x52\x44\x1b\x07\x26\xf8\xe0\x73\xc1\xd0\x41\x24\xfa\xfa\xfd\x62\x84\x72\xa1\x84\x10\x44\xf9\xdb\xb9\xe0\xec\x8c\xb4\x81\xf0\x42\x05\xc3\x30\xcc\x43\xca\x16\x48\xb3\xa2\xa5\x02\x8a\x7f\x3b\x17\x96\x86\x6b\xa5\x50\x18\x5a\x20\x88\x40\xec\x52\xd9\xa6\x19\x4b\x48\x01\xae\x04\x72\x6d\x65\x9f\x46\x56\xbd\x1d\xa8\x60\x83\x2d\xd0\x53\x28\xbc\x5c\xa8\x86\xca\xfa\x9e\x9e\x42\x13\x44\x01\x0b\xd5\xd5\x95\xdb\x89\x96\x0a\x65\x4f\xb0\x73\x23\xb6\x82\x15\x90\x50\x59\xa0\x66\x0c\x5b\x45\x0a\x78\xa8\xae\xb3\xf3\xb6\xa8\x2c\x3f\xba\x35\x7a\xde\x91\x15\x4b\x0a\x69\x6f\xed\xe2\xec\x8c\x80\xc2\x4e\x92\xc4\x66\xe1\x09\x91\x79\x75\x99\x24\x08\x0d\x14\x9c\x53\xf2\xc2\x21\x9f\x58\xe0\x0c\x68\xd2\x93\x2a\xd1\x82\x5f\x69\xaf\x4b\x0f\x65\x42\x53\xbe\x48\x44\x6e\x11\x23\x8e\x39\x08\x74\x07\x9e\x14\x83\xe2\x81\xfb\x5c\x69\x63\x8e\x04\x65\x83\x93\x12\x30\x2c\xb2\x66\x8c\xfa\xea\x6f\x50\x36\x38\x29\xa4\x84\x46\xce\x78\xa5\xbe\xba\x25\x94\x09\x4d\x8a\xc0\xe1\xd4\x8a\xc4\x9d\x17\xba\x03\x4f\x89\xa8\x44\xae\x7d\x25\x8f\x3b\x39\x74\x07\x9e\x14\x43\x94\xaf\xce\x13\x91\xc7\x82\x01\xca\x06\x27\x85\x94\xf1\x20\x52\x62\x8b\x98\x39\x1b\xe7\xce\x5c\x2a\xa5\x28\x9e\x62\x3a\xab\x77\x6c\x92\x0a\xb9\xb8\xa0\x2a\x1a\x05\x5e\xc2\xaf\x13\x91\x05\x3d\xc0\x7d\xc1\x5d\x6e\xc2\x10\x7a\x84\xfc\x82\xb5\x53\x41\x9b\x56\x2f\x1e\xcf\xb7\x3e\x14\xdb\x15\x6b\xfc\xd2\x01\x16\x54\xb0\xbc\x82\x2b\xf8\xea\xe6\xc5\xe5\x29\xbc\x3b\x54\x7b\x79\x49\x15\x7d\xa2\x0a\x78\xab\x26\x18\x8e\x7c\x2e\xac\x2c\xfe\x20\xf0\xe2\x26\x17\x69\x91\x86\xd8\xb1\x7b\x41\xb5\x5f\x18\x86\xb9\x9c\x73\xbd\xf2\xcd\xb5\x6b\xa5\x68\xab\xbd\x1c\x10\x0b\x65\xff\x58\x13\x6e\x70\x61\xf0\x98\x51\x45\x17\x1c\x4e\x3d\xc8\xb9\x10\x96\x6d\x61\x95\x73\x51\x53\xd1\xfd\x23\x91\x5f\xbd\x5c\x6e\x6c\xa1\x15\x33\x56\x13\xe6\x10\x4f\x60\xe2\x6c\x1f\xdc\x5c\x0a\x4a\x52\x11\xe8\x0e\xb0\x62\x27\xa2\x8a\xe9\x24\x8e\x59\xbe\xb4\xf4\xdd\x28\xff\x5e\x40\xb2\xf0\xdd\x59\xbc\x99\x9a\x2f\xea\x0d\xec\x5a\xb6\x61\xd5\x4c\x43\xf1\xc7\xc9\x2e\x60\x6f\x6e\xa1\xfd\xb2\x5c\x2e\x43\x61\xf1\x02\x41\x40\xbd\x4f\x3d\x71\x23\xed\xc2\x51\x45\xbd\x4f\x30\x80\xcc\x4b\xc6\xce\x9b\xba\xb9\xcf\xc1\x39\x38\x67\xad\x04\xfe\xaf\x30\xe4\x7f\x0a\xe8\xdf\xe2\xe3\x29\x1a\xbf\x02\x35\xd7\x52\xff\xfa\x22\xf1\x0e\x5f\xf3\xaf\x8b\xa6\xbe\xaa\x7b\xc5\x3a\x51\x82\x94\x09\xd5\xe7\x76\xf0\x7b\x6b\x65\x90\x24\x49\xf6\x86\x63\x99\x19\xaf\x48\x92\xa4\x06\xde\xf5\xa4\x41\xce\xbd\x8b\x16\x22\x12\x3e\x41\x6b\xc6\x35\xa7\x6f\xdc\x48\x40\x17\xb0\x84\x36\x0f\x8b\x01\x45\x2d\x5a\x55\x65\x31\xa4\x3a\xc2\xb4\xa9\x2f\x26\x1d\x75\x3e\xe5\x70\x51\x54\xd5\x0f\x8f\x01\x5d\x98\x93\xa6\x0c\x4f\x19\x84\xed\x6b\xbd\xad\x30\xc4\xe5\x80\x1e\x2f\x09\x33\x32\xf8\x8f\xde\x15\xc1\x1b\x25\xcf\x51\x47\x95\x1a\x94\xb2\x98\x4a\xa6\xb0\x86\x95\x72\xd9\x2d\xb6\x15\xca\x5c\xd0\xb0\x32\x39\x4e\x7a\x2c\x83\xec\x06\xe8\xc4\xe0\xc7\x32\x21\x6a\x93\x11\xd8\xe0\xe3\x39\x66\x5a\xf3\xa3\xba\x69\xaf\x2b\xaf\x6d\x7a\x5f\xea\xeb\xb2\x23\xb6\x10\x55\x6a\x31\x2b\xd0\x42\x6c\x41\x67\x09\x40\xc3\xca\x7c\xca\x6d\xe7\xda\x98\xf0\xae\x85\xe9\x04\x9e\x0f\x2b\x4a\xfb\x6d\x45\x80\x16\xb2\x93\x5a\x76\xb5\xbd\x69\x6e\x04\xb4\xa3\xb6\x9b\x72\x6f\xdc\xa0\x68\x01\xeb\xa8\x6d\x7a\xec\xb2\x07\x64\xcd\xd2\xcc\xbe\x4d\xcf\xd1\xee\x9a\x81\x7b\xa3\x39\xca\x0e\x77\x2b\x76\x4d\xee\x59\xa5\xb2\xf3\xfe\xf5\x14\x78\xdf\xa3\x0d\xa4\xb7\x36\x0e\xbd\x03\xb9\x6a\x37\xc2\x7f\xeb\xd2\xea\xe3\xad\xb3\x59\xac\xcd\x21\xc7\xcc\x23\x7d\x44\x8d\xd3\x3e\x86\x1d\x43\x7a\xe3\x76\x7d\xa5\xb2\x95\x30\x09\xeb\xea\xe2\xb1\xab\x55\x0f\x8b\x43\x65\xdf\x1f\x6d\xf0\xee\x91\x3c\x74\x8f\xed\x43\x77\xd6\xd9\x2c\x14\xe4\x08\xa6\x38\x3c\x9f\xad\x1c\x41\x67\xd7\x31\xb9\xcc\x62\xd6\x5b\x8b\x9a\xba\x93\x5a\xea\x56\x50\xa8\xc3\xa2\x35\x27\xe6\xd3\xce\x56\x9a\x0d\xaa\x6d\xa5\x7d\xb5\x41\x0b\xd9\x8d\xc6\x70\xb5\xad\xc9\xb0\xf4\x46\x12\xdd\x43\xd5\x15\x0f\xd1\x5a\xac\x05\x14\xde\x82\x56\x73\xd7\x3d\x32\x2e\xdb\xa8\x3a\x82\x6f\x1f\xd9\x11\x5a\xf8\xb1\xaf\xf7\xe0\xb1\x36\x49\xe8\x2c\xe8\xac\x1b\xda\xd4\x9d\xa3\x55\xa7\x8b\xc9\xb2\xd8\xa8\xec\xbb\x6b\x72\x2b\x22\x1c\x2e\xb6\xc6\xdb\xb1\x36\x39\x0a\xd8\xe4\x30\x47\x27\xc3\xc5\x74\xbe\x6e\x2b\x54\x49\x98\xee\x5d\xf1\x68\x7a\x6b\xff\x45\x5d\x02\x3d\x44\x06\xe9\xf5\x37\xd5\x03\xef\xf9\x86\xd6\xb4\xb9\x56\x75\x2d\x4d\x11\x55\xd0\xb9\x0e\x47\xc3\x8a\x37\xbf\xae\xc6\x99\x0b\xda\xc0\x39\x66\x80\xf7\x8e\x6d\xb4\x37\xda\xec\xb9\x91\xdc\x64\x8f\xcc\x7e\xb0\x61\x90\xc1\x68\xb3\x1f\xac\x45\x84\x65\x18\x74\x70\x24\xf7\x83\xc0\x3e\x9e\x5d\x88\x07\xf2\x76\x7d\x9a\xc5\x06\x6b\x16\xe9\x8d\x27\x74\x9f\x61\xf6\xec\x78\x7c\xec\x8f\x36\x25\x6e\xd3\xa3\x07\xeb\x66\xa3\xb7\x66\x4a\x7d\xba\x5d\x62\x63\xf2\x86\x53\xfc\x28\xb5\x9a\xee\x1c\x9d\xc4\xe4\xa9\x49\x79\xcc\xd7\xe4\xf5\x37\xbd\xc3\x62\xda\x84\x05\xac\x33\x16\xd0\xaa\xfd\x31\xec\x5c\x62\x6e\xc0\xb7\xaa\xb0\x80\xf5\x0c\x01\x23\x57\x03\x84\x45\xdb\x0d\x79\xc6\x4f\xf1\x8d\x80\x49\xc7\xf7\x61\xdb\x8f\x09\x61\x46\xf5\x46\x23\xcf\x57\x3a\xa6\xa4\x4d\x36\x9c\xde\xd9\x0a\x43\xea\x28\x35\x3b\xea\x62\x6d\x9a\x82\xde\x83\xe7\x53\x7c\xbd\x18\xab\xcc\xc7\xb0\xe3\xad\x8d\xcb\x4f\xd5\x4d\x7f\xc3\xec\xb9\xcd\x18\x63\x8f\xe4\x9e\xa5\x27\xcd\xc1\x66\x7c\x64\x47\xcd\xc6\x60\x34\xa1\xfa\xa3\x66\xa3\x77\x1c\xef\x06\xa3\x05\xcd\xd2\xcd\x46\x5b\x89\xe4\x6d\x04\xb4\x87\x08\xd3\x89\x2b\x31\x57\x79\x8b\x96\xba\xe9\xaf\x55\x86\xa3\x37\x18\xbb\x9e\x23\xfd\x51\xb3\xd9\x67\x1e\xc9\xf3\xe2\x79\xb7\xf5\x62\xa5\xbf\xe1\x54\x11\xed\x1d\xf8\x19\x05\xf3\xd3\xaa\xfb\xa1\x90\x95\x2e\x16\xc5\x95\x4f\x07\x68\xcf\xa7\x28\x67\x31\xe3\x64\x0f\xff\x81\xc9\xbb\xf9\xb4\x67\x2d\x66\x83\xd5\x62\x8a\x6f\x3e\x86\x9d\x83\x97\x23\xba\x2b\x76\x2b\xfb\x39\xa7\xd9\xe1\x98\xe6\x18\xf4\x4c\xa5\xf8\x51\x2c\x7e\xec\x58\x84\xe4\x58\x5a\x1d\xb4\xba\x6b\x6b\xce\x4b\x03\x98\x99\xdb\x02\x55\x06\x53\x0e\xaf\xb4\x39\xbe\x4f\x19\x66\xfb\xd0\x2a\x4d\x57\x73\x66\xc5\x92\xe4\x6a\x47\x22\x62\x89\x3e\xce\xd6\x16\xc1\xfb\xb9\x92\x1c\x8e\x27\x7d\xee\x1d\x6f\xcc\xdb\xed\x7f\xbc\xfc\x0d\x7a\x66\xdd\x67\xd6\x7d\x66\xdd\xff\x34\xeb\xa2\x3d\x86\x45\x59\x86\xc1\xd9\x35\x53\x1a\x1c\xdb\x5e\x96\x44\xfa\x4c\xaf\x39\x58\xcb\xcc\x60\x2d\x37\x7b\x34\x79\x64\x8f\x13\xaa\xdf\xf8\x52\xd6\xbd\xca\x1b\x7d\x4d\xde\xef\x96\x75\xd7\xe2\xae\xb7\xf6\xf4\xa2\x5a\x7d\xba\xd3\xe4\xfc\x2c\xc9\xe0\xdc\xa6\xed\xfd\xc3\xd8\x75\x7b\xdf\xa7\x57\xbb\xde\x91\x44\xfe\xaf\x64\x5d\xbb\x8d\xcd\x76\x7e\xce\xe9\x24\xb2\xee\x76\xb7\xa2\x9b\x03\x66\x44\xe2\x63\xaa\xb1\xa7\x8b\x66\x99\xa7\x8a\xf0\xbc\xf7\x46\x4f\x76\x0c\xb5\x2e\x2d\xd1\xc1\x62\xf8\x31\x6b\xcc\xa5\x11\xb9\x99\x92\xab\x41\x9b\xa4\x48\x8a\xde\xd2\xc7\xe2\x6e\xce\xc0\x9a\x9f\xc7\x18\xb5\x39\xda\x0c\xdd\x81\xd6\x68\xbc\x24\x0e\xbf\x16\x30\x01\xef\xd4\x82\x3f\xf9\xc4\x39\x3c\xba\x7f\xe8\xd5\x24\xb9\xe0\xa8\x0d\x79\x87\xe9\xb3\xff\x6c\x34\xf5\xa8\x0e\x8a\x03\x2f\x4f\x39\xe3\xb0\xcb\x03\xc1\x9f\x2a\x5c\x2a\x41\x6d\xf9\x2c\x5f\x9e\xe5\xcb\x73\x23\x7d\x6e\xa4\xcf\xf2\xe5\x59\xbe\x3c\xcb\x97\x67\xd6\x7d\x66\xdd\x3f\x43\xd6\x7d\x96\x2f\xcf\xf2\xe5\xf7\x28\x5f\xc2\x07\x29\xc1\xdb\x4c\x50\xfc\xe2\xf2\x6a\x13\x86\x61\x97\x33\x7a\x08\x21\x08\xe2\xf2\x2e\x5b\xed\x2a\x81\x17\x1d\x65\x0b\xa0\xc4\xd5\xe9\xe6\x6c\xee\xd7\x1a\x19\x15\x02\xea\x7d\xa2\x57\x9e\x13\xe7\x7e\x34\xfb\xdc\x9f\x53\x74\x1b\x38\xf5\xaf\x93\x66\x96\x6a\xe1\xc4\x33\x0a\xb6\x0c\x4c\xf4\x1e\xe7\x4f\x19\x28\x73\xd8\xd0\x5a\x59\xe3\x66\xa0\xa2\x81\xff\x88\x66\xbd\x38\x80\xff\x6a\x2a\x14\xbf\xf8\x4d\x16\x0a\xc4\x65\x19\xe8\x16\x13\xd9\xe7\xa7\x86\x0d\x15\x0f\xff\xe4\x4d\x4b\xd1\x78\xeb\x00\x65\x42\x6f\xdf\x6b\xff\x65\x29\x88\x25\x18\x4e\x8d\x10\x02\x53\x2f\x4b\x65\xd6\xc4\x92\x18\x71\xc7\xcb\xe2\x6a\xb5\x12\x13\x9b\x2c\x8b\x2b\x30\x01\x7c\xdc\xb3\x2c\x7e\x1e\xd0\x9e\x07\xb4\x67\x59\xfc\x2c\x8b\x9f\x65\xf1\x33\xeb\x3e\xb3\xee\x9f\x35\xeb\x3e\xcb\xe2\x67\x59\xfc\x47\x79\xaa\x97\xae\x13\x32\x4a\x93\x47\x24\x97\x1a\xe5\x0b\x85\xc5\x6f\x28\x0d\x6e\x0a\x8f\x67\xa9\xf0\xdc\xb4\x9e\x9b\xd6\xb3\x54\x78\x96\x0a\xcf\x52\xe1\x99\x75\x9f\x59\xf7\x4f\x9b\x75\x9f\xa5\xc2\xb3\x54\xf8\x1d\x9f\xa0\xa5\x8e\xf5\x89\x07\x6a\x99\xb8\xdf\xf6\x94\x22\xf9\xb8\x2d\x1b\xf9\xe5\xc7\x44\x80\x10\xbd\x5a\xe1\x7f\xff\xe9\x5b\xb6\xd1\x3e\x2f\xac\x1e\x3c\x9b\xfb\x4d\xb6\xfe\x8a\x8e\xf7\x9f\xdc\x7d\x81\xf2\x9e\x96\x7f\xc4\x05\xbb\xe3\x78\xf1\xc7\x7c\x99\xb8\xff\xa6\xb1\xef\x3e\x04\xfc\x9c\xf0\x9e\xa9\xff\x63\x1d\x81\xc6\x2b\x6a\xea\x45\xde\x4b\xbf\x98\x04\xf0\xd2\xcc\x25\x01\x74\xc0\x3e\xfd\x16\xb0\x03\xd2\xe2\x5c\x2b\x0d\x31\x79\xdb\xde\x19\x96\xf4\xf2\xe3\xd2\x77\x06\x8b\xbf\x16\x4c\x98\xfb\x1c\xe2\xb7\x25\xf8\xe2\x4b\xb7\x62\xc5\xfb\x64\xbc\xda\x1b\x73\x8c\xc0\xe9\xb2\xfb\x1c\x28\x94\xa3\x43\x05\x5f\xc3\xb0\xc5\x8c\x9d\x2b\x28\x43\xaa\x9d\x05\xa4\x6f\x81\x8d\x2c\xca\x06\x95\x01\xe3\x55\x31\x1b\x0c\x74\x29\x03\xd1\xcf\x80\xd1\xdd\x2c\x09\xd9\x40\x2e\xfb\x5d\xec\xf8\x0f\x68\xf3\x28\xe2\x1b\x2a\xde\xbb\xc5\xdc\xe7\xd0\x2b\xf0\xa6\xe3\xd9\x7f\xe7\xd6\x4a\xc7\xdf\xb6\x06\xc1\x21\x9f\xc6\xab\xdb\x85\x07\x6d\x2c\x60\x95\x19\x4c\x38\x63\x05\xd0\xc5\x76\x5a\x1a\x0d\x38\xae\xb5\x46\xde\xf8\x71\x83\xe1\x87\x0c\x39\x1e\xf6\x7a\x4c\x77\xd3\x38\x18\x43\x4a\xea\xbc\x8f\x3e\x8e\x30\x49\x35\x59\xf2\xd8\xa6\xc4\x0a\x49\x4e\x06\x63\x30\x58\x2c\x1b\xb3\x5f\x9b\xac\x8c\x36\x06\x1d\x93\x63\x26\x6d\x83\x64\xc6\x14\x90\x0d\x55\x79\x2f\xcf\x85\x8f\x3d\xea\x10\x6c\x79\x3a\xa3\xdf\x6c\x9d\xdf\x82\x3e\xde\xc7\x96\x2d\xfd\xb5\x58\xe9\x92\x83\x01\x37\x69\xb5\xc1\xab\x3a\xfe\x58\xe2\x83\x85\xf3\x56\x64\x8f\xfd\xb6\xf1\x3a\x2f\x2e\x14\xd5\x19\x7e\x18\x9d\x6e\xfb\xd5\x2c\x56\xb6\xec\x71\x83\x13\xbf\xbe\x8f\xda\x47\xca\xc4\x25\x1b\x33\xe7\x43\x75\xdd\x2d\x15\xcb\xc6\x70\xda\x3b\xce\xb4\xe1\xeb\xa6\x51\x46\x5e\xb7\x1c\x31\x1b\xf4\x09\x42\xb0\x57\x0b\x5d\x6a\xb4\xcd\xd2\x0a\x8c\x90\xea\x71\x54\x6c\x2d\xf6\x47\x66\x49\x76\x50\x72\xe4\xee\xd9\x59\xa7\x38\x9c\x6d\x8b\x8b\xd6\xeb\x62\x37\x86\xc7\xc3\xc1\x88\x27\x7b\x70\xdf\x84\xd7\xf2\x50\x2b\xbf\x2d\x69\x7b\x6c\x2b\xef\x9d\x19\x55\x31\x37\xdd\x21\x35\xfa\x28\x6f\xb4\xe5\x87\xc6\x55\x49\x18\x73\x8b\x65\x7c\x2f\x50\x45\x1a\x48\x38\x72\x1c\x95\xde\x1c\xa1\x3f\x59\x93\x2b\xab\x33\xa0\x67\xf2\xb0\x69\x34\x67\x1b\x8d\xe0\xd1\x05\x3d\x1c\x62\x2b\x93\x1f\x09\x0b\x8b\x3f\xae\x28\x7a\xba\x5d\x2e\xcb\xa8\xf8\x0e\x1b\xbd\xb6\xc8\xec\xe9\xca\x4c\xe8\x6d\xac\x6a\x1f\xfe\x50\x6c\x6a\xb8\x35\xc8\x19\x39\x7e\xd5\x1c\x6d\xc2\x2f\x91\xc6\x70\xda\x66\x35\x7e\xbe\xd9\x0e\x66\xd3\xf1\x66\xb6\x3d\xb6\x76\x8e\x85\x95\x78\xb6\xea\x72\x52\xbb\x42\xc3\xa3\x1d\xfd\xb6\x7a\xc3\x9a\x87\x01\xd8\x7e\x48\x5b\x45\xdf\x61\xa2\x0c\xa6\x74\xb3\x8c\xf6\x15\xac\xb3\xc6\x1b\xd5\xa6\x3b\xd0\x2a\x94\x6a\xe8\x22\x39\x1b\x02\x51\x2d\x8f\x0d\x62\x52\xe5\x30\x4a\x73\x45\xa2\x42\x81\x65\xb7\xf2\x36\x6b\x6c\xe7\xc5\x15\x55\xa2\xd7\xbb\xd6\xcc\x94\x17\x1f\xc7\x06\x70\x47\xcd\xe1\xe0\x9d\x69\x34\xa8\xc9\xaa\xfc\xf1\x21\x1d\x9b\x02\x5b\x6e\x39\x1c\x86\xaf\x5e\x45\xaa\x59\x5a\x8e\x3b\xc5\xd2\x3b\xbd\x25\xc4\x0a\xfc\xa1\x09\x68\x0b\x5d\x35\xb0\x12\xa5\x09\x94\x64\xda\xbb\x71\x85\xea\x94\x48\xfa\xc0\x4d\xe6\xaf\xe8\xbc\x07\x53\xf8\xc0\x36\x00\xd7\x1f\x77\xba\x47\x72\x74\x9c\x23\x1c\x85\xaa\xea\xfe\x20\x9b\x9c\xd4\x2d\x73\xf4\x70\x88\x5a\xad\x6a\xdf\x75\xd1\x8e\x0c\x6f\xfa\x2e\x40\xf5\xb7\x9e\x50\x7a\x35\x59\x75\xde\x7a\x67\x0d\x9b\xad\x36\x5e\xf7\xc3\x66\x6b\x81\x0e\x89\x1d\x33\xae\xae\x0f\xb3\x21\x6a\xf3\x2b\x64\xdc\x6c\xb6\xba\xbf\xb6\x69\x8a\x6e\x88\x6c\x6f\x4d\xcf\xdd\xd6\x64\x50\x55\x17\xef\x5d\x47\xed\x96\xdf\x9b\x23\xb4\x5a\xaa\xb8\x25\xbd\xb4\x38\x94\xe9\xb7\x21\x35\x2d\xb7\xaa\x8d\xd9\xb0\x5a\xad\x6e\x17\xae\xb3\x39\xae\x57\x6f\xeb\x26\x81\xd0\xec\xd1\x15\xd7\x04\x6b\x18\x4e\xcb\x10\xf4\x77\x13\x6c\x0f\xb2\xda\x2b\x17\x7f\xb5\x5e\x59\xeb\xcd\xaa\x18\xd2\x60\x3b\x46\x9d\x77\x73\xbf\x18\x8c\x38\xaa\x48\xf6\x0c\x71\x4c\xbe\x8a\x6e\x73\x85\x7c\xe9\x30\xa8\x1b\xe1\xb7\xb0\x63\x8c\xdf\x04\xe6\xf2\x6b\x0a\xc2\x4b\xc5\x37\xad\x65\xc2\x3e\x4e\xe9\x86\x7f\x9a\x22\x49\x6a\xac\x67\x5c\x3a\xe5\x06\xc9\xb5\x46\x36\x46\xed\x09\x73\xf9\x41\x7e\x46\xa6\xfd\x94\x82\xfe\x84\xa2\xf1\xa9\x8c\x06\xf5\x19\x81\x97\x9d\x3f\xa7\xf1\x52\xf5\x27\x54\xfd\xcf\x08\xe8\xee\xa7\x03\x7d\x81\x82\x4b\x50\x44\x2d\x0e\xbe\x7f\xbf\xdd\x39\xd3\x77\xc7\xa3\x05\xe6\x05\xdb\x50\x5d\x07\x44\xcb\x6f\xee\xfd\xb5\x86\xeb\x41\x63\x82\x3c\x82\x7f\xab\x07\x3b\x05\x82\x7f\x0b\x97\xf3\xad\x3f\x61\xb8\xec\x75\xbc\x8b\xa2\xef\xa1\x1a\xf7\xb9\x1a\xd4\x5d\x8c\xbf\x56\xf7\x91\xfe\x22\xdd\x41\xf7\xef\x62\xbc\x65\xb9\x27\xf3\x11\x8a\x8b\x50\x57\x67\x7f\xe4\xe6\x8f\x1c\xfc\x91\x6b\x3f\x70\xea\xc7\xee\xfc\x99\x23\x3f\x70\xe1\x47\xce\xfb\xc8\x6d\x1f\x39\x6c\xd6\xf3\x21\xff\xad\xbe\x73\x96\xd1\x2e\x87\x44\x1c\xfe\x96\x59\xbd\x62\xe5\x02\xfe\x2d\x17\xfc\x4c\x2c\x4b\x00\x7d\xba\xeb\xed\x7e\x33\x2c\xcf\xdd\x7d\xd9\x41\xc3\x0e\x38\x70\xf7\x7b\x1d\xec\x78\xd8\xfb\xe4\xfe\xa2\x68\xa6\x61\x39\x7c\xf2\x38\x14\x0d\x84\x3e\xd0\xa8\x41\xb5\x4f\x59\x3c\x01\xfd\x03\xb6\x4c\xae\xca\xc3\xd9\xfb\x4e\x90\xc9\x07\x3f\xe2\xf1\x5c\x23\x93\x0b\x41\x1f\x8d\xd6\xcf\x66\xc2\xe1\xfb\x2c\xf7\x8e\xb3\x99\x82\x88\x87\xa3\x7b\xe7\xdd\x2c\xae\xf2\x95\x27\x56\x85\x7c\xf7\x4b\x9f\xef\x89\xca\xe4\x7b\x50\xfa\xa4\x80\x41\xe9\x93\x02\x7a\xa5\xcf\x0d\x28\x2d\xce\xb5\xd2\x90\x4b\xe9\xf3\xfd\x47\xd4\xcd\xf6\xd2\x6b\x36\xf9\x03\xc8\xac\xdf\x4b\xfe\x74\x61\x94\xfc\x35\xe2\x4f\x17\x46\xa1\x62\xd1\xe6\x1e\x0e\xff\x87\x2a\x20\xef\x34\x10\xad\xfb\x8d\x65\xd3\xc0\x74\x97\xd1\xa8\x47\xeb\x6f\x91\x52\xd7\x14\xfd\xf2\x53\x54\x02\x8f\x75\xf6\xf1\x12\x07\x11\xbb\x0e\xf3\x0b\x91\x6d\xc1\x8c\x6a\x3f\x6a\xdc\x7a\x8b\x8a\x7a\xab\xde\xa2\x02\x9b\x66\x22\xb2\x87\xf1\xed\x9b\x01\xbf\x5a\x39\xbc\xbf\x70\xeb\x60\xe1\x9b\xc1\xd7\x7b\x0b\x17\x8b\x86\xe2\x02\x0f\xfa\x3a\xbb\xca\x0b\x40\x85\xc2\x06\xbe\x89\xbe\xad\xe9\xae\x4a\x7e\x73\xc4\xdb\x86\xc0\xa9\x4a\x36\x61\xe8\x58\xcf\xdd\xc4\xcd\x97\xb0\xf1\x6e\xb2\x54\x0e\x54\xf9\x67\xc1\xff\x93\xf7\x3b\xbb\x7e\x5a\x4b\x07\x0d\x2c\xe3\x6f\x2b\x84\xcd\x82\xe3\x4d\x7a\xbd\x9c\x65\xaa\xbc\xe8\xd5\xa3\xd2\xf5\x2e\x9e\x80\x78\x9f\x73\x2d\xaf\xd9\x9f\x13\x05\x6d\x93\x1f\x4a\x79\x88\x4f\xa6\xce\x68\x62\x4b\x15\xec\xeb\xde\xff\xf2\x92\x62\x01\x31\x28\x00\x8c\x5d\xf6\x99\x3f\x9d\x7f\xb3\x92\xc2\x03\x92\x28\x47\x3c\xa0\x89\x52\xc6\x03\x9a\x30\x83\x3c\xa4\xf8\x44\x95\x20\xbf\x3c\x20\x88\xa5\x1b\xcf\x3a\x35\x24\xd5\xbc\x0b\x45\xcc\xfd\xd9\x55\x4f\x7e\x2b\xe1\xa0\x93\xb6\xa8\x58\xa2\x0a\x72\x8a\x6e\x2b\x12\x38\x1b\x09\x9c\x04\x44\x45\xe3\xd5\x10\x99\xec\x0c\x06\xd7\x13\xdd\x3e\x5d\xf5\xf4\x18\x9d\x73\x55\xc8\x55\x73\x86\x7a\x69\x9b\x1f\xb4\x0d\xcd\xc1\xb9\xf0\x0b\x16\xb9\xa4\xff\xdb\xf9\x2a\xfc\xed\x6c\x78\xf4\x90\xe1\xf1\xfe\x04\x97\xaa\x9c\x52\x9d\x6f\xbd\x08\x14\x0d\x09\x44\xd1\xe7\x77\x40\xcd\x05\x51\x10\xf5\x1b\xf5\x81\x49\x59\x99\xbf\xcb\x8f\xb5\x55\x5b\x22\xde\x27\x63\x3f\x0b\xba\x07\xdf\xee\x67\x67\xd3\x02\xff\xf4\x55\x49\xe6\x8c\x8b\x62\x9e\xaa\xe1\xd4\x12\x63\x9b\x16\x38\x3b\x32\xe4\x48\xd1\x14\x10\xd4\xdb\xe4\xf0\x4b\x43\x81\xc0\xe1\xc3\x36\xa7\xf1\xd6\xfe\xb7\x2d\x8d\x1d\x39\xd1\x62\xd4\x91\x12\xcd\x45\x93\xab\xe8\x11\xab\x7c\x9c\xf6\x7a\x75\x4a\xfa\x56\xd4\xaf\x3e\xbc\xe5\x9b\xb5\x08\x41\xb7\xfc\xd4\x79\x02\x8a\x92\x63\xba\x61\xb1\x9f\x3a\x4d\x0b\x40\xbe\x91\x7e\x75\x0d\x07\x40\x92\x0a\x2d\x95\x95\x6b\x01\xc8\xef\x8a\x07\x99\x90\xeb\xb9\x08\xb4\x34\x2c\x2d\x25\x00\x0d\x04\xfc\xbf\xff\x09\x00\x00\xff\xff\xf0\xf5\xdb\xfd\x2d\x62\x00\x00")

func skeletonCssBytes() ([]byte, error) {
	return bindataRead(
		_skeletonCss,
		"skeleton.css",
	)
}

func skeletonCss() (*asset, error) {
	bytes, err := skeletonCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "skeleton.css", size: 25133, mode: os.FileMode(438), modTime: time.Unix(1525956458, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"skeleton.css": skeletonCss,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"skeleton.css": &bintree{skeletonCss, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}


func assetFS() *assetfs.AssetFS {
	assetInfo := func(path string) (os.FileInfo, error) {
		return os.Stat(path)
	}
	for k := range _bintree.Children {
		return &assetfs.AssetFS{Asset: Asset, AssetDir: AssetDir, AssetInfo: assetInfo, Prefix: k}
	}
	panic("unreachable")
}
